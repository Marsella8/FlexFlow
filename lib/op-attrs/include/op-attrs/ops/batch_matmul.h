// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/op-attrs/include/op-attrs/ops/batch_matmul.struct.toml

#ifndef _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_BATCH_MATMUL_H
#define _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_BATCH_MATMUL_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "rapidcheck.h"
#include <functional>
#include <ostream>
#include <sstream>
#include <tuple>

namespace FlexFlow {
struct BatchMatmulAttrs {
  BatchMatmulAttrs() = delete;
  BatchMatmulAttrs(int const &a_seq_length_dim, int const &b_seq_length_dim);

  bool operator==(BatchMatmulAttrs const &) const;
  bool operator!=(BatchMatmulAttrs const &) const;
  bool operator<(BatchMatmulAttrs const &) const;
  bool operator>(BatchMatmulAttrs const &) const;
  bool operator<=(BatchMatmulAttrs const &) const;
  bool operator>=(BatchMatmulAttrs const &) const;
  int a_seq_length_dim;
  int b_seq_length_dim;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<FlexFlow::BatchMatmulAttrs> {
  size_t operator()(FlexFlow::BatchMatmulAttrs const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<FlexFlow::BatchMatmulAttrs> {
  static FlexFlow::BatchMatmulAttrs from_json(json const &);
  static void to_json(json &, FlexFlow::BatchMatmulAttrs const &);
};
} // namespace nlohmann

namespace rc {
template <>
struct Arbitrary<FlexFlow::BatchMatmulAttrs> {
  static Gen<FlexFlow::BatchMatmulAttrs> arbitrary();
};
} // namespace rc

namespace FlexFlow {
std::string format_as(BatchMatmulAttrs const &);
std::ostream &operator<<(std::ostream &, BatchMatmulAttrs const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_BATCH_MATMUL_H
