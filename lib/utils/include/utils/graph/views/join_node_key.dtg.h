// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/utils/include/utils/graph/views/join_node_key.struct.toml
/* proj-data
{
  "generated_from": "d18ad1216e748a6af1a1a132f18a2284"
}
*/

#ifndef _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_VIEWS_JOIN_NODE_KEY_DTG_H
#define _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_VIEWS_JOIN_NODE_KEY_DTG_H

#include "fmt/format.h"
#include "utils/graph/node/node.dtg.h"
#include "utils/graph/views/lr_direction.dtg.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct JoinNodeKey {
  JoinNodeKey() = delete;
  explicit JoinNodeKey(::FlexFlow::Node const &node,
                       ::FlexFlow::LRDirection const &direction);

  bool operator==(JoinNodeKey const &) const;
  bool operator!=(JoinNodeKey const &) const;
  bool operator<(JoinNodeKey const &) const;
  bool operator>(JoinNodeKey const &) const;
  bool operator<=(JoinNodeKey const &) const;
  bool operator>=(JoinNodeKey const &) const;
  ::FlexFlow::Node node;
  ::FlexFlow::LRDirection direction;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<::FlexFlow::JoinNodeKey> {
  size_t operator()(::FlexFlow::JoinNodeKey const &) const;
};
} // namespace std

namespace FlexFlow {
std::string format_as(JoinNodeKey const &);
std::ostream &operator<<(std::ostream &, JoinNodeKey const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_VIEWS_JOIN_NODE_KEY_DTG_H
