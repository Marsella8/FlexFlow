// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/utils/include/utils/graph/digraph/directed_edge.struct.toml
/* proj-data
{
  "generated_from": "406f818eb74797f6ea07231506a56f81"
}
*/

#ifndef _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_DIGRAPH_DIRECTED_EDGE_DTG_H
#define _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_DIGRAPH_DIRECTED_EDGE_DTG_H

#include "fmt/format.h"
#include "utils/graph/node/node.dtg.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct DirectedEdge {
  DirectedEdge() = delete;
  explicit DirectedEdge(::FlexFlow::Node const &src,
                        ::FlexFlow::Node const &dst);

  bool operator==(DirectedEdge const &) const;
  bool operator!=(DirectedEdge const &) const;
  bool operator<(DirectedEdge const &) const;
  bool operator>(DirectedEdge const &) const;
  bool operator<=(DirectedEdge const &) const;
  bool operator>=(DirectedEdge const &) const;
  ::FlexFlow::Node src;
  ::FlexFlow::Node dst;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<::FlexFlow::DirectedEdge> {
  size_t operator()(::FlexFlow::DirectedEdge const &) const;
};
} // namespace std

namespace FlexFlow {
std::string format_as(DirectedEdge const &);
std::ostream &operator<<(std::ostream &, DirectedEdge const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_DIGRAPH_DIRECTED_EDGE_DTG_H
