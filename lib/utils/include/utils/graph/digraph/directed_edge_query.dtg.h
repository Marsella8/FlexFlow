// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/utils/include/utils/graph/digraph/directed_edge_query.struct.toml
/* proj-data
{
  "generated_from": "4d7f3398fb178b272a4230d2db24c0d5"
}
*/

#ifndef _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_DIGRAPH_DIRECTED_EDGE_QUERY_DTG_H
#define _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_DIGRAPH_DIRECTED_EDGE_QUERY_DTG_H

#include "fmt/format.h"
#include "utils/graph/node/node.dtg.h"
#include "utils/graph/query_set.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct DirectedEdgeQuery {
  DirectedEdgeQuery() = delete;
  explicit DirectedEdgeQuery(
      ::FlexFlow::query_set<::FlexFlow::Node> const &srcs,
      ::FlexFlow::query_set<::FlexFlow::Node> const &dsts);

  bool operator==(DirectedEdgeQuery const &) const;
  bool operator!=(DirectedEdgeQuery const &) const;
  bool operator<(DirectedEdgeQuery const &) const;
  bool operator>(DirectedEdgeQuery const &) const;
  bool operator<=(DirectedEdgeQuery const &) const;
  bool operator>=(DirectedEdgeQuery const &) const;
  ::FlexFlow::query_set<::FlexFlow::Node> srcs;
  ::FlexFlow::query_set<::FlexFlow::Node> dsts;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<::FlexFlow::DirectedEdgeQuery> {
  size_t operator()(::FlexFlow::DirectedEdgeQuery const &) const;
};
} // namespace std

namespace FlexFlow {
std::string format_as(DirectedEdgeQuery const &);
std::ostream &operator<<(std::ostream &, DirectedEdgeQuery const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_DIGRAPH_DIRECTED_EDGE_QUERY_DTG_H
