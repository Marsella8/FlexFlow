// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/utils/include/utils/graph/graph_split.struct.toml
/* proj-data
{
  "generated_from": "bf08a68806136ac698f1206f84cb907f"
}
*/

#ifndef _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_GRAPH_SPLIT_DTG_H
#define _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_GRAPH_SPLIT_DTG_H

#include "fmt/format.h"
#include "utils/fmt/unordered_set.h"
#include "utils/graph/node/node.dtg.h"
#include "utils/hash/unordered_set.h"
#include <functional>
#include <ostream>
#include <tuple>
#include <unordered_set>

namespace FlexFlow {
struct GraphSplit {
  GraphSplit() = delete;
  explicit GraphSplit(std::unordered_set<::FlexFlow::Node> const &first,
                      std::unordered_set<::FlexFlow::Node> const &second);

  bool operator==(GraphSplit const &) const;
  bool operator!=(GraphSplit const &) const;
  std::unordered_set<::FlexFlow::Node> first;
  std::unordered_set<::FlexFlow::Node> second;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<::FlexFlow::GraphSplit> {
  size_t operator()(::FlexFlow::GraphSplit const &) const;
};
} // namespace std

namespace FlexFlow {
std::string format_as(GraphSplit const &);
std::ostream &operator<<(std::ostream &, GraphSplit const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_GRAPH_SPLIT_DTG_H
