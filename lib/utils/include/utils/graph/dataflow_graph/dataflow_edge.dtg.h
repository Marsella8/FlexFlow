// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/utils/include/utils/graph/dataflow_graph/dataflow_edge.struct.toml
/* proj-data
{
  "generated_from": "4728f139efc6884057f39e38f44a791b"
}
*/

#ifndef _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_DATAFLOW_GRAPH_DATAFLOW_EDGE_DTG_H
#define _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_DATAFLOW_GRAPH_DATAFLOW_EDGE_DTG_H

#include "fmt/format.h"
#include "utils/graph/dataflow_graph/dataflow_input.dtg.h"
#include "utils/graph/dataflow_graph/dataflow_output.dtg.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct DataflowEdge {
  DataflowEdge() = delete;
  explicit DataflowEdge(::FlexFlow::DataflowOutput const &src,
                        ::FlexFlow::DataflowInput const &dst);

  bool operator==(DataflowEdge const &) const;
  bool operator!=(DataflowEdge const &) const;
  bool operator<(DataflowEdge const &) const;
  bool operator>(DataflowEdge const &) const;
  bool operator<=(DataflowEdge const &) const;
  bool operator>=(DataflowEdge const &) const;
  ::FlexFlow::DataflowOutput src;
  ::FlexFlow::DataflowInput dst;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<::FlexFlow::DataflowEdge> {
  size_t operator()(::FlexFlow::DataflowEdge const &) const;
};
} // namespace std

namespace FlexFlow {
std::string format_as(DataflowEdge const &);
std::ostream &operator<<(std::ostream &, DataflowEdge const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_DATAFLOW_GRAPH_DATAFLOW_EDGE_DTG_H
