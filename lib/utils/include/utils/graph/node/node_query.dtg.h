// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/utils/include/utils/graph/node/node_query.struct.toml
/* proj-data
{
  "generated_from": "e3e4a13f0d1a7ca9f179ba09dd4c5735"
}
*/

#ifndef _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_NODE_NODE_QUERY_DTG_H
#define _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_NODE_NODE_QUERY_DTG_H

#include "fmt/format.h"
#include "utils/graph/node/node.dtg.h"
#include "utils/graph/query_set.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct NodeQuery {
  NodeQuery() = delete;
  explicit NodeQuery(::FlexFlow::query_set<::FlexFlow::Node> const &nodes);

  bool operator==(NodeQuery const &) const;
  bool operator!=(NodeQuery const &) const;
  bool operator<(NodeQuery const &) const;
  bool operator>(NodeQuery const &) const;
  bool operator<=(NodeQuery const &) const;
  bool operator>=(NodeQuery const &) const;
  ::FlexFlow::query_set<::FlexFlow::Node> nodes;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<::FlexFlow::NodeQuery> {
  size_t operator()(::FlexFlow::NodeQuery const &) const;
};
} // namespace std

namespace FlexFlow {
std::string format_as(NodeQuery const &);
std::ostream &operator<<(std::ostream &, NodeQuery const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_NODE_NODE_QUERY_DTG_H
