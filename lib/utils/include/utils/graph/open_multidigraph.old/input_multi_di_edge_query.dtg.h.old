// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/utils/include/utils/graph/open_multidigraph/input_multi_di_edge_query.struct.toml
/* proj-data
{
  "generated_from": "c42e43b28fae9a63d94e54f244dd3ee0"
}
*/

#ifndef _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_OPEN_MULTIDIGRAPH_INPUT_MULTI_DI_EDGE_QUERY_DTG_H
#define _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_OPEN_MULTIDIGRAPH_INPUT_MULTI_DI_EDGE_QUERY_DTG_H

#include "fmt/format.h"
#include "utils/graph/node/node.dtg.h"
#include "utils/graph/query_set.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct InputMultiDiEdgeQuery {
  InputMultiDiEdgeQuery() = delete;
  explicit InputMultiDiEdgeQuery(
      ::FlexFlow::query_set<::FlexFlow::Node> const &dsts);

  bool operator==(InputMultiDiEdgeQuery const &) const;
  bool operator!=(InputMultiDiEdgeQuery const &) const;
  bool operator<(InputMultiDiEdgeQuery const &) const;
  bool operator>(InputMultiDiEdgeQuery const &) const;
  bool operator<=(InputMultiDiEdgeQuery const &) const;
  bool operator>=(InputMultiDiEdgeQuery const &) const;
  ::FlexFlow::query_set<::FlexFlow::Node> dsts;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<::FlexFlow::InputMultiDiEdgeQuery> {
  size_t operator()(::FlexFlow::InputMultiDiEdgeQuery const &) const;
};
} // namespace std

namespace FlexFlow {
std::string format_as(InputMultiDiEdgeQuery const &);
std::ostream &operator<<(std::ostream &, InputMultiDiEdgeQuery const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_UTILS_INCLUDE_UTILS_GRAPH_OPEN_MULTIDIGRAPH_INPUT_MULTI_DI_EDGE_QUERY_DTG_H
