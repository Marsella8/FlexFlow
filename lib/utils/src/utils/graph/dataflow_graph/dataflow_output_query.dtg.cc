// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/utils/include/utils/graph/dataflow_graph/dataflow_output_query.struct.toml
/* proj-data
{
  "generated_from": "6f662c3c4d285a4fd3c60713e6fc67fa"
}
*/

#include "utils/graph/dataflow_graph/dataflow_output_query.dtg.h"

#include "utils/graph/node.dtg.h"
#include "utils/graph/query_set.h"
#include <sstream>

namespace FlexFlow {
DataflowOutputQuery::DataflowOutputQuery(
    ::FlexFlow::query_set<::FlexFlow::Node> const &nodes,
    ::FlexFlow::query_set<int> const &output_idxs)
    : nodes(nodes), output_idxs(output_idxs) {}
bool DataflowOutputQuery::operator==(DataflowOutputQuery const &other) const {
  return std::tie(this->nodes, this->output_idxs) ==
         std::tie(other.nodes, other.output_idxs);
}
bool DataflowOutputQuery::operator!=(DataflowOutputQuery const &other) const {
  return std::tie(this->nodes, this->output_idxs) !=
         std::tie(other.nodes, other.output_idxs);
}
bool DataflowOutputQuery::operator<(DataflowOutputQuery const &other) const {
  return std::tie(this->nodes, this->output_idxs) <
         std::tie(other.nodes, other.output_idxs);
}
bool DataflowOutputQuery::operator>(DataflowOutputQuery const &other) const {
  return std::tie(this->nodes, this->output_idxs) >
         std::tie(other.nodes, other.output_idxs);
}
bool DataflowOutputQuery::operator<=(DataflowOutputQuery const &other) const {
  return std::tie(this->nodes, this->output_idxs) <=
         std::tie(other.nodes, other.output_idxs);
}
bool DataflowOutputQuery::operator>=(DataflowOutputQuery const &other) const {
  return std::tie(this->nodes, this->output_idxs) >=
         std::tie(other.nodes, other.output_idxs);
}
} // namespace FlexFlow

namespace std {
size_t hash<FlexFlow::DataflowOutputQuery>::operator()(
    ::FlexFlow::DataflowOutputQuery const &x) const {
  size_t result = 0;
  result ^= std::hash<::FlexFlow::query_set<::FlexFlow::Node>>{}(x.nodes) +
            0x9e3779b9 + (result << 6) + (result >> 2);
  result ^= std::hash<::FlexFlow::query_set<int>>{}(x.output_idxs) +
            0x9e3779b9 + (result << 6) + (result >> 2);
  return result;
}
} // namespace std

namespace FlexFlow {
std::string format_as(DataflowOutputQuery const &x) {
  std::ostringstream oss;
  oss << "<DataflowOutputQuery";
  oss << " nodes=" << x.nodes;
  oss << " output_idxs=" << x.output_idxs;
  oss << ">";
  return oss.str();
}
std::ostream &operator<<(std::ostream &s, DataflowOutputQuery const &x) {
  return s << fmt::to_string(x);
}
} // namespace FlexFlow
