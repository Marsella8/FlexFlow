// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/utils/include/utils/graph/downward_open_dataflow_graph/dataflow_graph_output.struct.toml
/* proj-data
{
  "generated_from": "817156d78fd6385f97978fdd02d1b925"
}
*/

#include "utils/graph/downward_open_dataflow_graph/dataflow_graph_output.dtg.h"

#include <sstream>

namespace FlexFlow {
DataflowGraphOutput::DataflowGraphOutput(int const &index) : index(index) {}
bool DataflowGraphOutput::operator==(DataflowGraphOutput const &other) const {
  return std::tie(this->index) == std::tie(other.index);
}
bool DataflowGraphOutput::operator!=(DataflowGraphOutput const &other) const {
  return std::tie(this->index) != std::tie(other.index);
}
bool DataflowGraphOutput::operator<(DataflowGraphOutput const &other) const {
  return std::tie(this->index) < std::tie(other.index);
}
bool DataflowGraphOutput::operator>(DataflowGraphOutput const &other) const {
  return std::tie(this->index) > std::tie(other.index);
}
bool DataflowGraphOutput::operator<=(DataflowGraphOutput const &other) const {
  return std::tie(this->index) <= std::tie(other.index);
}
bool DataflowGraphOutput::operator>=(DataflowGraphOutput const &other) const {
  return std::tie(this->index) >= std::tie(other.index);
}
} // namespace FlexFlow

namespace std {
size_t hash<FlexFlow::DataflowGraphOutput>::operator()(
    ::FlexFlow::DataflowGraphOutput const &x) const {
  size_t result = 0;
  result ^=
      std::hash<int>{}(x.index) + 0x9e3779b9 + (result << 6) + (result >> 2);
  return result;
}
} // namespace std

namespace FlexFlow {
std::string format_as(DataflowGraphOutput const &x) {
  std::ostringstream oss;
  oss << "<DataflowGraphOutput";
  oss << " index=" << x.index;
  oss << ">";
  return oss.str();
}
std::ostream &operator<<(std::ostream &s, DataflowGraphOutput const &x) {
  return s << fmt::to_string(x);
}
} // namespace FlexFlow
