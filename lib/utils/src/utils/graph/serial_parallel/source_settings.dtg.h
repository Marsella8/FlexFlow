// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/utils/src/utils/graph/serial_parallel/source_settings.enum.toml
/* proj-data
{
  "generated_from": "56c4dd8f16ee7756372801aa91f619ea"
}
*/

#ifndef _FLEXFLOW_LIB_UTILS_SRC_UTILS_GRAPH_SERIAL_PARALLEL_SOURCE_SETTINGS_DTG_H
#define _FLEXFLOW_LIB_UTILS_SRC_UTILS_GRAPH_SERIAL_PARALLEL_SOURCE_SETTINGS_DTG_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "rapidcheck.h"
#include <functional>
#include <ostream>
#include <string>

namespace FlexFlow {
enum class SourceSettings { INCLUDE_SOURCE_NODES, EXCLUDE_SOURCE_NODES };
std::string format_as(SourceSettings);
std::ostream &operator<<(std::ostream &, SourceSettings);
void to_json(::nlohmann::json &, SourceSettings);
void from_json(::nlohmann::json const &, SourceSettings &);
} // namespace FlexFlow
namespace std {
template <>
struct hash<FlexFlow::SourceSettings> {
  size_t operator()(FlexFlow::SourceSettings) const;
};
} // namespace std
namespace rc {
template <>
struct Arbitrary<FlexFlow::SourceSettings> {
  static Gen<FlexFlow::SourceSettings> arbitrary();
};
} // namespace rc

#endif // _FLEXFLOW_LIB_UTILS_SRC_UTILS_GRAPH_SERIAL_PARALLEL_SOURCE_SETTINGS_DTG_H
