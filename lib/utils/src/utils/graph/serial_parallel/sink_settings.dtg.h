// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/utils/src/utils/graph/serial_parallel/sink_settings.enum.toml
/* proj-data
{
  "generated_from": "547a817b201dd109c446a3bb8afe5343"
}
*/

#ifndef _FLEXFLOW_LIB_UTILS_SRC_UTILS_GRAPH_SERIAL_PARALLEL_SINK_SETTINGS_DTG_H
#define _FLEXFLOW_LIB_UTILS_SRC_UTILS_GRAPH_SERIAL_PARALLEL_SINK_SETTINGS_DTG_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "rapidcheck.h"
#include <functional>
#include <ostream>
#include <string>

namespace FlexFlow {
enum class SinkSettings { INCLUDE_SINK_NODES, EXCLUDE_SINK_NODES };
std::string format_as(SinkSettings);
std::ostream &operator<<(std::ostream &, SinkSettings);
void to_json(::nlohmann::json &, SinkSettings);
void from_json(::nlohmann::json const &, SinkSettings &);
} // namespace FlexFlow
namespace std {
template <>
struct hash<FlexFlow::SinkSettings> {
  size_t operator()(FlexFlow::SinkSettings) const;
};
} // namespace std
namespace rc {
template <>
struct Arbitrary<FlexFlow::SinkSettings> {
  static Gen<FlexFlow::SinkSettings> arbitrary();
};
} // namespace rc

#endif // _FLEXFLOW_LIB_UTILS_SRC_UTILS_GRAPH_SERIAL_PARALLEL_SINK_SETTINGS_DTG_H
