// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/utils/include/utils/graph/digraph/di_input.struct.toml
/* proj-data
{
  "generated_from": "19ab2e465577ae9e7add8b73c63e671f"
}
*/

#include "utils/graph/digraph/di_input.dtg.h"

#include <sstream>

namespace FlexFlow {
DiInput::DiInput(::FlexFlow::Node const &dst) : dst(dst) {}
bool DiInput::operator==(DiInput const &other) const {
  return std::tie(this->dst) == std::tie(other.dst);
}
bool DiInput::operator!=(DiInput const &other) const {
  return std::tie(this->dst) != std::tie(other.dst);
}
bool DiInput::operator<(DiInput const &other) const {
  return std::tie(this->dst) < std::tie(other.dst);
}
bool DiInput::operator>(DiInput const &other) const {
  return std::tie(this->dst) > std::tie(other.dst);
}
bool DiInput::operator<=(DiInput const &other) const {
  return std::tie(this->dst) <= std::tie(other.dst);
}
bool DiInput::operator>=(DiInput const &other) const {
  return std::tie(this->dst) >= std::tie(other.dst);
}
} // namespace FlexFlow

namespace std {
size_t hash<FlexFlow::DiInput>::operator()(::FlexFlow::DiInput const &x) const {
  size_t result = 0;
  result ^= std::hash<::FlexFlow::Node>{}(x.dst) + 0x9e3779b9 + (result << 6) +
            (result >> 2);
  return result;
}
} // namespace std

namespace FlexFlow {
std::string format_as(DiInput const &x) {
  std::ostringstream oss;
  oss << "<DiInput";
  oss << " dst=" << x.dst;
  oss << ">";
  return oss.str();
}
std::ostream &operator<<(std::ostream &s, DiInput const &x) {
  return s << fmt::to_string(x);
}
} // namespace FlexFlow
