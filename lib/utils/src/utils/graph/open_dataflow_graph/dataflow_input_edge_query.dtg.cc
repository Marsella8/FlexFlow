// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/utils/include/utils/graph/open_dataflow_graph/dataflow_input_edge_query.struct.toml
/* proj-data
{
  "generated_from": "7bc0c4aa108438c9f24536f8b669b532"
}
*/

#include "utils/graph/open_dataflow_graph/dataflow_input_edge_query.dtg.h"

#include <sstream>

namespace FlexFlow {
DataflowInputEdgeQuery::DataflowInputEdgeQuery(
    ::FlexFlow::query_set<::FlexFlow::DataflowGraphInput> const &srcs,
    ::FlexFlow::query_set<::FlexFlow::Node> const &dst_nodes,
    ::FlexFlow::query_set<int> const &dst_idxs)
    : srcs(srcs), dst_nodes(dst_nodes), dst_idxs(dst_idxs) {}
bool DataflowInputEdgeQuery::operator==(
    DataflowInputEdgeQuery const &other) const {
  return std::tie(this->srcs, this->dst_nodes, this->dst_idxs) ==
         std::tie(other.srcs, other.dst_nodes, other.dst_idxs);
}
bool DataflowInputEdgeQuery::operator!=(
    DataflowInputEdgeQuery const &other) const {
  return std::tie(this->srcs, this->dst_nodes, this->dst_idxs) !=
         std::tie(other.srcs, other.dst_nodes, other.dst_idxs);
}
bool DataflowInputEdgeQuery::operator<(
    DataflowInputEdgeQuery const &other) const {
  return std::tie(this->srcs, this->dst_nodes, this->dst_idxs) <
         std::tie(other.srcs, other.dst_nodes, other.dst_idxs);
}
bool DataflowInputEdgeQuery::operator>(
    DataflowInputEdgeQuery const &other) const {
  return std::tie(this->srcs, this->dst_nodes, this->dst_idxs) >
         std::tie(other.srcs, other.dst_nodes, other.dst_idxs);
}
bool DataflowInputEdgeQuery::operator<=(
    DataflowInputEdgeQuery const &other) const {
  return std::tie(this->srcs, this->dst_nodes, this->dst_idxs) <=
         std::tie(other.srcs, other.dst_nodes, other.dst_idxs);
}
bool DataflowInputEdgeQuery::operator>=(
    DataflowInputEdgeQuery const &other) const {
  return std::tie(this->srcs, this->dst_nodes, this->dst_idxs) >=
         std::tie(other.srcs, other.dst_nodes, other.dst_idxs);
}
} // namespace FlexFlow

namespace std {
size_t hash<FlexFlow::DataflowInputEdgeQuery>::operator()(
    ::FlexFlow::DataflowInputEdgeQuery const &x) const {
  size_t result = 0;
  result ^= std::hash<::FlexFlow::query_set<::FlexFlow::DataflowGraphInput>>{}(
                x.srcs) +
            0x9e3779b9 + (result << 6) + (result >> 2);
  result ^= std::hash<::FlexFlow::query_set<::FlexFlow::Node>>{}(x.dst_nodes) +
            0x9e3779b9 + (result << 6) + (result >> 2);
  result ^= std::hash<::FlexFlow::query_set<int>>{}(x.dst_idxs) + 0x9e3779b9 +
            (result << 6) + (result >> 2);
  return result;
}
} // namespace std

namespace FlexFlow {
std::string format_as(DataflowInputEdgeQuery const &x) {
  std::ostringstream oss;
  oss << "<DataflowInputEdgeQuery";
  oss << " srcs=" << x.srcs;
  oss << " dst_nodes=" << x.dst_nodes;
  oss << " dst_idxs=" << x.dst_idxs;
  oss << ">";
  return oss.str();
}
std::ostream &operator<<(std::ostream &s, DataflowInputEdgeQuery const &x) {
  return s << fmt::to_string(x);
}
} // namespace FlexFlow
