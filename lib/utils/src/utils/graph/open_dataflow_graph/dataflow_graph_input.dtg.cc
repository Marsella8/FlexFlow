// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/utils/include/utils/graph/open_dataflow_graph/dataflow_graph_input.struct.toml
/* proj-data
{
  "generated_from": "7d6fe1350bb6f70771a7481a8e36aa2e"
}
*/

#include "utils/graph/open_dataflow_graph/dataflow_graph_input.dtg.h"

#include <sstream>

namespace FlexFlow {
DataflowGraphInput::DataflowGraphInput(int const &idx) : idx(idx) {}
bool DataflowGraphInput::operator==(DataflowGraphInput const &other) const {
  return std::tie(this->idx) == std::tie(other.idx);
}
bool DataflowGraphInput::operator!=(DataflowGraphInput const &other) const {
  return std::tie(this->idx) != std::tie(other.idx);
}
bool DataflowGraphInput::operator<(DataflowGraphInput const &other) const {
  return std::tie(this->idx) < std::tie(other.idx);
}
bool DataflowGraphInput::operator>(DataflowGraphInput const &other) const {
  return std::tie(this->idx) > std::tie(other.idx);
}
bool DataflowGraphInput::operator<=(DataflowGraphInput const &other) const {
  return std::tie(this->idx) <= std::tie(other.idx);
}
bool DataflowGraphInput::operator>=(DataflowGraphInput const &other) const {
  return std::tie(this->idx) >= std::tie(other.idx);
}
} // namespace FlexFlow

namespace std {
size_t hash<FlexFlow::DataflowGraphInput>::operator()(
    ::FlexFlow::DataflowGraphInput const &x) const {
  size_t result = 0;
  result ^=
      std::hash<int>{}(x.idx) + 0x9e3779b9 + (result << 6) + (result >> 2);
  return result;
}
} // namespace std

namespace FlexFlow {
std::string format_as(DataflowGraphInput const &x) {
  std::ostringstream oss;
  oss << "<DataflowGraphInput";
  oss << " idx=" << x.idx;
  oss << ">";
  return oss.str();
}
std::ostream &operator<<(std::ostream &s, DataflowGraphInput const &x) {
  return s << fmt::to_string(x);
}
} // namespace FlexFlow
