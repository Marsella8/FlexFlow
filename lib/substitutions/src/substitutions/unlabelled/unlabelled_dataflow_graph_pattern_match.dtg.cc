// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/substitutions/include/substitutions/unlabelled/unlabelled_dataflow_graph_pattern_match.struct.toml
/* proj-data
{
  "generated_from": "8e2550c2e4cd04bb1458f9e3f4ac05ba"
}
*/

#include "substitutions/unlabelled/unlabelled_dataflow_graph_pattern_match.dtg.h"

#include <sstream>

namespace FlexFlow {
UnlabelledDataflowGraphPatternMatch::UnlabelledDataflowGraphPatternMatch(
    ::FlexFlow::bidict<::FlexFlow::PatternNode, ::FlexFlow::Node> const
        &node_assignment,
    ::FlexFlow::bidict<::FlexFlow::PatternValue,
                       ::FlexFlow::OpenDataflowValue> const &value_assignment)
    : node_assignment(node_assignment), value_assignment(value_assignment) {}
bool UnlabelledDataflowGraphPatternMatch::operator==(
    UnlabelledDataflowGraphPatternMatch const &other) const {
  return std::tie(this->node_assignment, this->value_assignment) ==
         std::tie(other.node_assignment, other.value_assignment);
}
bool UnlabelledDataflowGraphPatternMatch::operator!=(
    UnlabelledDataflowGraphPatternMatch const &other) const {
  return std::tie(this->node_assignment, this->value_assignment) !=
         std::tie(other.node_assignment, other.value_assignment);
}
} // namespace FlexFlow

namespace std {
size_t hash<FlexFlow::UnlabelledDataflowGraphPatternMatch>::operator()(
    ::FlexFlow::UnlabelledDataflowGraphPatternMatch const &x) const {
  size_t result = 0;
  result ^=
      std::hash<
          ::FlexFlow::bidict<::FlexFlow::PatternNode, ::FlexFlow::Node>>{}(
          x.node_assignment) +
      0x9e3779b9 + (result << 6) + (result >> 2);
  result ^= std::hash<::FlexFlow::bidict<::FlexFlow::PatternValue,
                                         ::FlexFlow::OpenDataflowValue>>{}(
                x.value_assignment) +
            0x9e3779b9 + (result << 6) + (result >> 2);
  return result;
}
} // namespace std

namespace FlexFlow {
std::string format_as(UnlabelledDataflowGraphPatternMatch const &x) {
  std::ostringstream oss;
  oss << "<UnlabelledDataflowGraphPatternMatch";
  oss << " node_assignment=" << x.node_assignment;
  oss << " value_assignment=" << x.value_assignment;
  oss << ">";
  return oss.str();
}
std::ostream &operator<<(std::ostream &s,
                         UnlabelledDataflowGraphPatternMatch const &x) {
  return s << fmt::to_string(x);
}
} // namespace FlexFlow
